@IsTest(SeeAllData=false)
private class EmailStatsTest {
    @IsTest
    static void validateEmailStats() {
        EmailStats es = new EmailStats();
        Integer test = 90;
        
        List<Campaign> campaigns = new List<Campaign>();
        List<ListEmail> listEmails = new List<ListEmail>();
        Campaign c = new Campaign(Name='test');
        insert c;
        ListEmail le = new ListEmail(Subject='test',CampaignId=c.Id,Status='Draft',Name='test',FromAddress='test@test.com');
        insert le;
        es.generateEmailStats2(campaigns, listEmails);
       
        System.assertEquals(90, test);
    }
    
    @IsTest
    static void validateGetPieData() {
       EmailStats es = new EmailStats();
       
       List<EmailStats.PieWedgeData> data = es.getPieData();
       
       System.assertEquals(6, data.size());
    }
    
    @IsTest
    static void EmailStats2Test() {
        EmailStats.EmailStats2 es = new EmailStats.EmailStats2(getFakeId(EmailStatus.SObjectType));
        es.contactName = 'test';
        es.contactEmail = 'test';
        es.taskId = getFakeId(Task.SObjectType);
        es.whoId = getFakeId(Contact.SObjectType);
        es.createdDate = DateTime.newInstance(2023,2,2);
        es.firstOpenDate = DateTime.newInstance(2023,2,2);
        es.lastOpenDate = DateTime.newInstance(2023,2,2);
        es.timesOpened = 4;
        es.emailTemplateName = 'test';
        // Test passes if no error is generated :D
        System.assertEquals(6, 6);
    }
    
    @IsTest
    static void MapListEmailTest() {
        EmailStats es = new EmailStats();
        ListEmail le = new ListEmail();
        //le.createdDate = DateTime.newInstance(2023,2,2);
        le.status = 'test';
        le.subject = 'test';
        EmailStats.ListEmail2 le2 = es.mapListEmail(le);
        // Test passes if no error is generated :D
        System.assertEquals(6, 6);
    }
    
    @IsTest
    static void ProcessContactTest() {
        EmailStats es = new EmailStats();
        Contact c = new Contact(FirstName='test',LastName='test',Email='test@test.com');
        EmailStatus est = new EmailStatus(
            //TaskId=getFakeId(Task.SObjectType),
            //FirstOpenDate = DateTime.newInstance(2023,2,2),
            //LastOpenDate = DateTime.newInstance(2023,2,2),
            //TimesOpened = 4,
            //EmailTemplateName = 'test'
        );
        es.processEmailStatusForContact(c, est);
        // Test passes if no error is generated :D
        System.assertEquals(6, 6);
    }
    
    @IsTest
    static void ProcessLeadTest() {
        EmailStats es = new EmailStats();
        Lead l = new Lead();
        EmailStatus est = new EmailStatus();
        es.processEmailStatusForLead(l, est);
        // Test passes if no error is generated :D
        System.assertEquals(6, 6);
    }
    
    @IsTest
    static void validateGetBarStackData() {
        EmailStats es = new EmailStats();
        es.campaign2s = new Map<string, EmailStats.Campaign2>();
        Id campaignId1 = getFakeId(Campaign.SObjectType);
        Id campaignId2 = getFakeId(Campaign.SObjectType);
        EmailStats.Campaign2 campaign1 = new EmailStats.Campaign2(campaignId1, 'test 1');
        EmailStats.Campaign2 campaign2 = new EmailStats.Campaign2(campaignId2, 'test 2');
        es.campaign2s.put(campaignId1,campaign1);
        es.campaign2s.put(campaignId2,campaign2);
        campaign1.emailSends = new Map<string, EmailStats.ListEmail2>();
        campaign2.emailSends = new Map<string, EmailStats.ListEmail2>();
        EmailStats.ListEmail2 le1 = new EmailStats.ListEmail2(getFakeId(ListEmail.SObjectType));
        EmailStats.ListEmail2 le2 = new EmailStats.ListEmail2(getFakeId(ListEmail.SObjectType));
        le1.emailSubject = 'test1';
        le2.emailSubject = 'test2';
        le1.createdDate = DateTime.newInstance(2023,2,2);
        le2.createdDate = DateTime.newInstance(2023,2,2);
        campaign1.emailSends.put(le1.id, le1);
        campaign2.emailSends.put(le2.id, le2);
        EmailStats.EmailStats2 es1 = new EmailStats.EmailStats2(getFakeId(EmailStatus.SObjectType));
        EmailStats.EmailStats2 es2 = new EmailStats.EmailStats2(getFakeId(EmailStatus.SObjectType));
        EmailStats.EmailStats2 es3 = new EmailStats.EmailStats2(getFakeId(EmailStatus.SObjectType));
        EmailStats.EmailStats2 es4 = new EmailStats.EmailStats2(getFakeId(EmailStatus.SObjectType));
        es1.timesOpened = 0;
        es2.timesOpened = 5;
        es3.timesOpened = 3;
        es4.timesOpened = 1;
        le1.emailStats = new List<EmailStats.EmailStats2>();
        le2.emailStats = new List<EmailStats.EmailStats2>();
        le1.emailStats.add(es1);
        le1.emailStats.add(es2);
        le2.emailStats.add(es3);
        le2.emailStats.add(es4);
        System.assertEquals(2, es.getBarStackData().size());        
    }

    static Integer s_num = 1;
    
    public static String getFakeId(Schema.SObjectType sot)
    {
        String result = String.valueOf(s_num++);
        return sot.getDescribe().getKeyPrefix() + '0'.repeat(12-result.length()) + result;
    }   
     
}